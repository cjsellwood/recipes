{"version":3,"sources":["components/Recipes/Recipes.module.css","components/AddRecipe/AddRecipe.module.css","components/Nav.module.css","components/IngredientInput/IngredientInput.module.css","components/MethodInput/MethodInput.module.css","components/Recipe/Recipe.module.css","components/Spinner/Spinner.module.css","components/Nav.js","components/Recipes/Recipes.js","components/IngredientInput/IngredientInput.js","components/MethodInput/MethodInput.js","components/AddRecipe/AddRecipe.js","components/Recipe/Recipe.js","components/Spinner/Spinner.js","App.js","index.js"],"names":["module","exports","Nav","className","classes","Navbar","to","xmlns","width","height","fill","viewBox","d","Recipes","props","recipesDisplay","recipes","map","recipe","index","RecipeContainer","name","category","time","PageTitle","IngredientInput","type","onChange","ingredientsChange","data-index","value","ingredient","autoComplete","PositionButtons","fillRule","data-key","onClick","deleteInput","MethodInput","methodChange","step","AddRecipe","ingredientsDisplay","ingredients","methodDisplay","method","MainHeading","onSubmit","saveRecipe","onKeyDown","e","key","preventDefault","formChange","placeholder","addIngredientInput","addMethodInput","Recipe","pathArray","useLocation","pathname","split","length","Spinner","loader","App","useState","setName","setTime","setCategory","setIngredients","setMethod","setRecipes","loading","setLoading","useEffect","fetch","then","response","json","newRecipes","keys","Object","i","push","catch","error","console","history","useHistory","exact","path","target","getAttribute","ingredientsCopy","log","addedRecipe","recipeObj","duplicateRecipes","headers","body","JSON","stringify","data","newIngredients","splice","newMethod","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1701f44c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeContainer\":\"Recipes_RecipeContainer__3Y6Gu\",\"PageTitle\":\"Recipes_PageTitle__2kGMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddRecipe\":\"AddRecipe_AddRecipe__3SxrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Nav_Navbar__2WAoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PositionButtons\":\"IngredientInput_PositionButtons__3lufe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PositionButtons\":\"MethodInput_PositionButtons__1dOA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Recipe\":\"Recipe_Recipe__2iQUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3ENkM\",\"load3\":\"Spinner_load3__jjSEM\"};","import React from \"react\";\nimport classes from \"./Nav.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className={classes.Navbar}>\n      <ul>\n        <li>\n          <Link to=\"/\">Recipes</Link>\n        </li>\n        <li>\n          <Link to=\"/addrecipe\">Add Recipe</Link>\n        </li>\n        <li></li>\n        <li>\n          <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport classes from \"./Recipes.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Recipes = (props) => {\n  const recipesDisplay = props.recipes.map((recipe, index) => {\n    return (\n      <Link to={`/recipes/${index}`} className={classes.RecipeContainer} key={index}>\n        <h2>{recipe.name}</h2>\n        <p>{recipe.category}</p>\n        <p>{recipe.time}</p>\n        {/* <ul>\n          {recipe.ingredients.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n        </ul>\n        <ol>\n          {recipe.ingredients.map((step, index) => (\n            <li key={index}>{step}</li>\n          ))}\n        </ol> */}\n      </Link>\n    );\n  });\n\n  return (\n    <section>\n      <h1 className={classes.PageTitle}>Recipes</h1>\n      {recipesDisplay}\n    </section>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport classes from \"./IngredientInput.module.css\";\n\nconst IngredientInput = (props) => {\n  return (\n    <li>\n      <input\n        type=\"text\"\n        name=\"ingredient\"\n        onChange={props.ingredientsChange}\n        data-index={props.index}\n        value={props.ingredient}\n        autoComplete=\"off\"\n      />\n      <div className={classes.PositionButtons}>\n        <button type=\"button\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 16 16\"\n\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\n            />\n          </svg>\n        </button>\n        <button type=\"button\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n            />\n          </svg>\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        data-index={props.index}\n        data-key=\"ingredients\"\n        onClick={props.deleteInput}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default IngredientInput;\n","import React from \"react\";\nimport classes from \"./MethodInput.module.css\";\n\nconst MethodInput = (props) => {\n  return (\n    <li>\n      <input\n        type=\"text\"\n        name=\"method\"\n        onChange={props.methodChange}\n        data-index={props.index}\n        value={props.step}\n        autoComplete=\"off\"\n      />\n      <div className={classes.PositionButtons}>\n        <button type=\"button\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\n            />\n          </svg>\n        </button>\n        <button type=\"button\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n            />\n          </svg>\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        data-index={props.index}\n        data-key=\"method\"\n        onClick={props.deleteInput}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default MethodInput;\n","import React from \"react\";\nimport classes from \"./AddRecipe.module.css\";\nimport IngredientInput from \"../IngredientInput/IngredientInput\";\nimport MethodInput from \"../MethodInput/MethodInput\";\n\nconst AddRecipe = (props) => {\n  const ingredientsDisplay = props.ingredients.map((ingredient, index) => {\n    return (\n      <IngredientInput\n        key={index}\n        ingredientsChange={props.ingredientsChange}\n        index={index}\n        ingredient={ingredient}\n        deleteInput={props.deleteInput}\n      />\n    );\n  });\n\n  const methodDisplay = props.method.map((step, index) => {\n    return (\n      <MethodInput\n        key={index}\n        methodChange={props.methodChange}\n        index={index}\n        step={step}\n        deleteInput={props.deleteInput}\n      />\n    );\n  });\n\n  return (\n    <div className={classes.AddRecipe}>\n      <h1 className={classes.MainHeading}>Add a New Recipe</h1>\n      <form\n        onSubmit={props.saveRecipe}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        }}\n      >\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={props.formChange}\n          value={props.name}\n          placeholder=\"Enter Name\"\n        />\n        <label>Category</label>\n        <input\n          type=\"text\"\n          name=\"category\"\n          onChange={props.formChange}\n          value={props.category}\n          placeholder=\"Enter Category\"\n        />\n        <label>Time</label>\n        <input\n          type=\"number\"\n          name=\"time\"\n          onChange={props.formChange}\n          value={props.time}\n          placeholder=\"Enter Time\"\n        />\n        <label>Ingredients</label>\n        <ul>{ingredientsDisplay}</ul>\n        <button type=\"button\" onClick={props.addIngredientInput}>\n          Add\n        </button>\n        <label>Method</label>\n        <ol>{methodDisplay}</ol>\n        <button type=\"button\" onClick={props.addMethodInput}>\n          Add\n        </button>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddRecipe;\n","import React from \"react\";\nimport classes from \"./Recipe.module.css\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Recipe = (props) => {\n  const location = useLocation();\n  const pathArray = location.pathname.split(\"/\");\n  const index = pathArray[pathArray.length - 1];\n\n  // Render nothing when going directly as recipes hasn't loaded yet\n  if (props.recipes.length === 0) {\n    return null;\n  } else {\n    return (\n      <section className={classes.Recipe}>\n        <h2>{props.recipes[index].name}</h2>\n        <p>{props.recipes[index].category}</p>\n        <p>{props.recipes[index].time}</p>\n        <ul>\n          {props.recipes[index].ingredients.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n        </ul>\n        <ol>\n          {props.recipes[index].method.map((step, index) => (\n            <li key={index}>{step}</li>\n          ))}\n        </ol>\n      </section>\n    );\n  }\n};\n\nexport default Recipe;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n  return <div className={classes.loader}></div>;\n};\n\nexport default Spinner;\n","import \"./App.css\";\nimport Navbar from \"./components/Nav\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Recipes from \"./components/Recipes/Recipes\";\nimport AddRecipe from \"./components/AddRecipe/AddRecipe\";\nimport React, { useState, useEffect } from \"react\";\nimport Recipe from \"./components/Recipe/Recipe\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nconst App = () => {\n  const [name, setName] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [ingredients, setIngredients] = useState([\"\"]);\n  const [method, setMethod] = useState([\"\"]);\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Retrieve recipes from local storage if stored there\n    // const storedRecipes = localStorage.getItem(\"recipes\");\n    // if (storedRecipes !== null) {\n    //   setRecipes(JSON.parse(storedRecipes));\n    // }\n\n    // Retrieve from firebase on first load\n    if (recipes.length === 0) {\n      fetch(\"https://recipes-f31ef-default-rtdb.firebaseio.com/recipes.json\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          const newRecipes = [];\n          const keys = Object.keys(response);\n          for (let i = 0; i < keys.length; i++) {\n            newRecipes.push(response[keys[i]]);\n          }\n          setRecipes(newRecipes);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Handle change in forms simple input values\n  const formChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"category\":\n        setCategory(value);\n        break;\n      case \"time\":\n        setTime(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Add new ingredient to list\n  const addIngredientInput = () => {\n    setIngredients([...ingredients, \"\"]);\n  };\n\n  // Change ingredients state based on input from form\n  const ingredientsChange = (e) => {\n    const index = e.target.getAttribute(\"data-index\");\n    const ingredientsCopy = [...ingredients];\n    ingredientsCopy[index] = e.target.value;\n    setIngredients(ingredientsCopy);\n  };\n\n  // Add new method step to list\n  const addMethodInput = () => {\n    setMethod([...method, \"\"]);\n  };\n\n  // Duplicate recipes deeply\n  const duplicateRecipes = (recipes) => {\n    const newRecipes = [];\n    for (let i = 0; i < recipes.length; i++) {\n      const recipeObj = {\n        name: recipes[i].name,\n        category: recipes[i].category,\n        time: recipes[i].time,\n        ingredients: [...recipes[i].ingredients],\n        method: [...recipes[i].method],\n      };\n      newRecipes.push(recipeObj);\n    }\n    return newRecipes;\n  };\n\n  // Change ingredients state based on input from form\n  const methodChange = (e) => {\n    const index = e.target.getAttribute(\"data-index\");\n    const ingredientsCopy = [...method];\n    ingredientsCopy[index] = e.target.value;\n    setMethod(ingredientsCopy);\n  };\n\n  const history = useHistory();\n\n  // Save to state when submitted\n  const saveRecipe = (e) => {\n    console.log(e)\n    e.preventDefault();\n    const addedRecipe = {\n      name,\n      category,\n      time,\n      ingredients,\n      method,\n    };\n\n    // Duplicate recipes\n    const newRecipes = duplicateRecipes(recipes);\n\n    // Add new recipe and add to firebase\n    newRecipes.push(addedRecipe);\n    setRecipes(newRecipes);\n    // localStorage.setItem(\"recipes\", JSON.stringify(newRecipes));\n\n    fetch(\"https://recipes-f31ef-default-rtdb.firebaseio.com/recipes.json\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(addedRecipe),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(\"Success\", data))\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n\n    // Redirect to home page\n    history.push(\"/\");\n  };\n\n\n  // Delete added step from add recipe form\n  const deleteInput = (e) => {\n    const index = e.target.getAttribute(\"data-index\");\n    const key = e.target.getAttribute(\"data-key\");\n\n    if (key === \"ingredients\") {\n      const newIngredients = [...ingredients];\n      console.log(newIngredients);\n      newIngredients.splice(index, 1);\n      console.log(newIngredients);\n      setIngredients(newIngredients);\n    } else {\n      const newMethod = [...method];\n      newMethod.splice(index, 1);\n      setMethod(newMethod);\n    }\n  };\n\n  // #TODO\n  // Allow moving of ingredients and method in add recipe\n  // Redux\n  // Search maybe\n  // Styling\n  // form validation\n  // stop inputs from pressing enter\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Navbar />\n      </header>\n      <Switch>\n        <Route exact path=\"/\">\n          {loading ? <Spinner /> : <Recipes recipes={recipes} />}\n        </Route>\n        <Route path=\"/addrecipe\">\n          <AddRecipe\n            name={name}\n            category={category}\n            time={time}\n            formChange={formChange}\n            ingredients={ingredients}\n            ingredientsChange={ingredientsChange}\n            addIngredientInput={addIngredientInput}\n            method={method}\n            methodChange={methodChange}\n            addMethodInput={addMethodInput}\n            saveRecipe={saveRecipe}\n            deleteInput={deleteInput}\n          />\n        </Route>\n        <Route path=\"/:id\">\n          <Recipe recipes={recipes} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}