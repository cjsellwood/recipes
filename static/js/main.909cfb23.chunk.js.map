{"version":3,"sources":["components/Recipes/Recipes.module.css","components/Filter/Filter.module.css","components/AddRecipe/AddRecipe.module.css","components/ListInput/ListInput.module.css","components/Button/Button.module.css","components/Recipe/Recipe.module.css","components/EditRecipe/EditRecipe.module.css","App.module.css","components/Nav/Nav.module.css","components/PageTitle/PageTitle.module.css","components/MenuButton/MenuButton.module.css","components/Spinner/Spinner.module.css","components/Nav/Nav.js","components/PageTitle/PageTitle.js","components/MenuButton/MenuButton.js","components/Filter/Filter.js","store/actions/actionTypes.js","store/actions/recipeForm.js","components/Recipes/Recipes.js","store/actions/recipes.js","components/Button/Button.js","components/ListInput/ListInput.js","components/AddRecipe/AddRecipe.js","components/Recipe/Recipe.js","components/Spinner/Spinner.js","components/EditRecipe/EditRecipe.js","components/ScrollToTop/ScrollToTop.js","App.js","store/reducers/recipeForm.js","store/reducers/recipes.js","index.js"],"names":["module","exports","Nav","className","classes","to","xmlns","width","height","fill","viewBox","d","PageTitle","props","children","MenuButton","onClick","toggleFilter","type","fillRule","Filter","filterClasses","FilterContainer","filterOpen","push","Open","checkboxDisplay","key","categories","name","checked","onChange","changeChecked","sort","a","b","nameA","toLowerCase","nameB","join","CloseButton","formWrapper","SET_DETAILS","RESET_RECIPE_FORM","ADD_LIST_INPUT","SET_LIST_INPUT","REMOVE_LIST_INPUT","REPLACE_LIST","UPDATE_CATEGORIES","TOGGLE_CATEGORY","REPLACE_RECIPES","ADD_RECIPE","EDIT_RECIPE","DELETE_RECIPE","setDetails","value","actionTypes","addListInput","replaceList","array","connect","state","recipes","dispatch","onToggleCategory","actions","recipesDisplay","filter","recipe","category","map","index","RecipeItem","DetailsContainer","time","useState","setFilterOpen","FilterModal","RecipesWrapper","RecipesContainer","FilterWrapper","e","target","Button","btnStyle","clickHandler","data-index","data-key","listName","onRemoveListInput","onSetListInput","listStyle","ListInput","MethodList","textArea","useRef","ref","rows","autoComplete","required","details","recipeForm","ingredients","method","onAddListInput","onResetRecipeForm","useEffect","ingredientsDisplay","ingredient","setListInput","removeListInput","methodDisplay","step","AddRecipe","onSubmit","saveRecipe","onKeyDown","preventDefault","formChange","placeholder","TimeContainer","pathArray","useLocation","pathname","split","length","Recipe","Spinner","loader","onSetDetails","onReplaceList","EditRecipe","saveEditedRecipe","deleteRecipe","ScrollToTop","window","scrollTo","onUpdateCategories","onReplaceRecipes","newRecipes","onAddRecipe","newRecipe","onEditRecipe","editedRecipe","onDeleteRecipe","loading","setLoading","dataFetched","setDataFetched","fetch","then","response","json","console","log","catch","error","history","useHistory","App","exact","path","id","Date","now","addedRecipe","headers","body","JSON","stringify","data","initialState","action","resetRecipeForm","arrayCopy","splice","arrayCopy2","reducer","updateCategories","newCategories","i","toggleCategory","duplicateRecipes","recipeObj","replaceRecipes","addRecipe","concat","editRecipe","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.909cfb23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipesWrapper\":\"Recipes_RecipesWrapper__2ANop\",\"RecipesContainer\":\"Recipes_RecipesContainer__3Y0gB\",\"RecipeItem\":\"Recipes_RecipeItem__shgWc\",\"DetailsContainer\":\"Recipes_DetailsContainer__3Mrj0\",\"FilterModal\":\"Recipes_FilterModal__34VfE\",\"FilterWrapper\":\"Recipes_FilterWrapper__2BfZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterContainer\":\"Filter_FilterContainer__RCB7a\",\"Open\":\"Filter_Open__2g_uW\",\"formWrapper\":\"Filter_formWrapper__1pdeA\",\"CloseButton\":\"Filter_CloseButton__az4bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddRecipe\":\"AddRecipe_AddRecipe__3SxrA\",\"TimeContainer\":\"AddRecipe_TimeContainer__2Cu6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListInput\":\"ListInput_ListInput__2S50O\",\"MethodList\":\"ListInput_MethodList__2lQDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"Save\":\"Button_Save__2is0_\",\"Delete\":\"Button_Delete__3VrNe\",\"Add\":\"Button_Add__GcQCw\",\"DeleteRecipe\":\"Button_DeleteRecipe__e1tDF\",\"Chevron\":\"Button_Chevron__3BRZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Recipe\":\"Recipe_Recipe__2iQUq\",\"DetailsContainer\":\"Recipe_DetailsContainer__25Cay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditRecipe\":\"EditRecipe_EditRecipe__ZdFW6\",\"TimeContainer\":\"EditRecipe_TimeContainer__1acAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__cViw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageTitle\":\"PageTitle_PageTitle__2pL08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuButton\":\"MenuButton_MenuButton__nT2fw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3ENkM\",\"load3\":\"Spinner_load3__jjSEM\"};","import React from \"react\";\nimport classes from \"./Nav.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className={classes.Nav}>\n      <ul>\n        <li>\n          <Link to=\"/\">Recipes</Link>\n        </li>\n        <li>\n          <Link to=\"/addrecipe\">Add Recipe</Link>\n        </li>\n        <li></li>\n        <li>\n          <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport classes from \"./PageTitle.module.css\";\n\nconst PageTitle = (props) => {\n  return <h1 className={classes.PageTitle}>{props.children}</h1>;\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport classes from \"./MenuButton.module.css\";\n\nconst MenuButton = (props) => {\n  return (\n    <button\n      className={classes.MenuButton}\n      onClick={props.toggleFilter}\n      type=\"button\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default MenuButton;\n","import React from \"react\";\nimport classes from \"./Filter.module.css\";\n\nconst Filter = (props) => {\n  // If filter sidebar is opened push class to change position\n  const filterClasses = [classes.FilterContainer];\n  if (props.filterOpen) {\n    filterClasses.push(classes.Open);\n  }\n\n  // Display labels with checkboxes for filtering\n  const checkboxDisplay = [];\n  for (let key in props.categories) {\n    checkboxDisplay.push(\n      <label key={key} name={key}>\n        <input\n          type=\"checkbox\"\n          checked={props.categories[key]}\n          name={key}\n          onChange={props.changeChecked}\n        />\n        {key}\n      </label>\n    );\n  }\n\n  // Sort alphabetically\n  checkboxDisplay.sort((a, b) => {\n    const nameA = a.props.name.toLowerCase();\n    const nameB = b.props.name.toLowerCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n  return (\n    <div className={filterClasses.join(\" \")}>\n      <button className={classes.CloseButton} onClick={props.toggleFilter}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n        </svg>\n      </button>\n      <h3>Filter</h3>\n      <div className={classes.formWrapper}>\n        <form>\n          <div>{checkboxDisplay}</div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","export const SET_DETAILS = \"SET_DETAILS\";\nexport const RESET_RECIPE_FORM = \"RESET_RECIPE_FORM\";\nexport const ADD_LIST_INPUT = \"ADD_LIST_INPUT\";\nexport const SET_LIST_INPUT = \"SET_LIST_INPUT\";\nexport const REMOVE_LIST_INPUT = \"REMOVE_LIST_INPUT\";\nexport const REPLACE_LIST = \"REPLACE_LIST\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const TOGGLE_CATEGORY = \"TOGGLE_CATEGORY\";\n\nexport const REPLACE_RECIPES = \"REPLACE_RECIPES\";\nexport const ADD_RECIPE = \"ADD_RECIPE\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\n","import * as actionTypes from \"./actionTypes\";\n\n// Handle input changes in form\nexport const setDetails = (key, value) => {\n  return {\n    type: actionTypes.SET_DETAILS,\n    key: key,\n    value: value,\n  };\n};\n\n// Clear all previously entered inputs\nexport const resetRecipeForm = () => {\n  return {\n    type: actionTypes.RESET_RECIPE_FORM,\n  };\n};\n\n// Add a new input field to the specified list (method or ingredients)\nexport const addListInput = (key) => {\n  return {\n    type: actionTypes.ADD_LIST_INPUT,\n    key: key,\n  };\n};\n\n// Set value of the currently focused list input field\nexport const setListInput = (key, index, value) => {\n  return {\n    type: actionTypes.SET_LIST_INPUT,\n    key: key,\n    index: index,\n    value: value,\n  };\n};\n\n// Remove a specified list input field from list\nexport const removeListInput = (key, index) => {\n  return {\n    type: actionTypes.REMOVE_LIST_INPUT,\n    key: key,\n    index: index,\n  };\n};\n\n// Replace list so that it can be edited\nexport const replaceList = (key, array) => {\n  return {\n    type: actionTypes.REPLACE_LIST,\n    key: key,\n    array: array,\n  };\n};\n","import React, { useState } from \"react\";\nimport classes from \"./Recipes.module.css\";\nimport { Link } from \"react-router-dom\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport MenuButton from \"../MenuButton/MenuButton\";\nimport Filter from \"../Filter/Filter\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\"\n\nconst Recipes = (props) => {\n  // List of recipes to display with category filter applied\n  const recipesDisplay = props.recipes\n    // Filter if category set to true in categories state\n    .filter((recipe) => props.categories[recipe.category.toLowerCase()])\n    .map((recipe, index) => {\n      return (\n        <Link\n          to={`/recipes/${index}`}\n          className={classes.RecipeItem}\n          key={index}\n          name={recipe.name}\n        >\n          <h2>{recipe.name}</h2>\n          <div className={classes.DetailsContainer}>\n            <p>{recipe.category}</p>\n            <p>\n              {recipe.time} {recipe.time !== \"\" ? \"Min\" : null}\n            </p>\n          </div>\n        </Link>\n      );\n    });\n\n  // Sort Alphabetically\n  recipesDisplay.sort((a, b) => {\n    const nameA = a.props.name.toLowerCase();\n    const nameB = b.props.name.toLowerCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n\n  // Control filter sidebar open and closing\n  const [filterOpen, setFilterOpen] = useState(false);\n  const toggleFilter = () => {\n    setFilterOpen(!filterOpen);\n  };\n\n  // Add dark background next to filter slide out menu if open\n  const filter = [];\n  if (filterOpen) {\n    filter.push(\n      <div\n        className={classes.FilterModal}\n        key=\"Filter\"\n        onClick={toggleFilter}\n      ></div>\n    );\n  }\n\n  // Change checkboxes in filter\n  const changeChecked = (e) => {\n    // const newCategories = { ...props.categories };\n    // newCategories[e.target.name] = !newCategories[e.target.name];\n    props.onToggleCategory(e.target.name);\n  };\n\n  return (\n    <div className={classes.RecipesWrapper}>\n      <section className={classes.RecipesContainer}>\n        <PageTitle>Recipes</PageTitle>\n        <div>{recipesDisplay}</div>\n      </section>\n      <MenuButton toggleFilter={toggleFilter} />\n      {filter}\n      <div className={classes.FilterWrapper}>\n        <Filter\n          filterOpen={filterOpen}\n          toggleFilter={toggleFilter}\n          categories={props.categories}\n          changeChecked={changeChecked}\n        ></Filter>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes.recipes,\n    categories: state.recipes.categories,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleCategory: (name) => {\n      dispatch(actions.toggleCategory(name))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);\n","import * as actionTypes from \"../actions/actionTypes\";\n\n\nexport const updateCategories = () => {\n  return {\n    type: actionTypes.UPDATE_CATEGORIES,\n  };\n};\n\n\nexport const toggleCategory = (name) => {\n  return {\n    type: actionTypes.TOGGLE_CATEGORY,\n    name,\n  };\n};\n\n\nexport const replaceRecipes = (newRecipes) => {\n  return {\n    type: actionTypes.REPLACE_RECIPES,\n    newRecipes,\n  }\n} \n\n\nexport const addRecipe = (newRecipe) => {\n  return {\n    type: actionTypes.ADD_RECIPE,\n    newRecipe: newRecipe,\n  };\n};\n\n\nexport const editRecipe = (editedRecipe, index) => {\n  return {\n    type: actionTypes.EDIT_RECIPE,\n    editedRecipe,\n    index,\n  }\n}\n\nexport const deleteRecipe = (index) => {\n  return {\n    type: actionTypes.DELETE_RECIPE,\n    index,\n  }\n}\n","import classes from \"./Button.module.css\";\nimport React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={[classes.Button, classes[props.btnStyle]].join(\" \")}\n      type={props.type}\n      onClick={props.clickHandler}\n      data-index={props.index}\n      data-key={props.listName}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef } from \"react\";\n\nimport classes from \"./ListInput.module.css\";\nimport Button from \"../Button/Button\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/recipeForm\";\n\nconst ListInput = (props) => {\n  const listStyle = [classes.ListInput];\n\n  if (props.listName === \"method\") {\n    listStyle.push(classes.MethodList);\n  }\n\n  // Resize text area when amount of text changes\n  const textArea = useRef(null);\n\n  return (\n    <li className={listStyle.join(\" \")}>\n      <div>\n        <TextareaAutosize\n          ref={textArea}\n          rows={1}\n          type=\"text\"\n          name={props.name}\n          onChange={(e) =>\n            props.onSetListInput(props.listName, props.index, e.target.value)\n          }\n          data-index={props.index}\n          value={props.name}\n          autoComplete=\"off\"\n          required={true}\n        ></TextareaAutosize>\n        <Button\n          type=\"button\"\n          btnStyle=\"Delete\"\n          index={props.index}\n          key={props.listName}\n          listName={props.listName}\n          clickHandler={() =>\n            props.onRemoveListInput(props.listName, props.index)\n          }\n        >\n          Delete\n        </Button>\n      </div>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveListInput: (key, index) => {\n      dispatch(actions.removeListInput(key, index));\n    },\n    onSetListInput: (key, index, value) => {\n      dispatch(actions.setListInput(key, index, value));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ListInput);\n","import React, { useEffect } from \"react\";\nimport classes from \"./AddRecipe.module.css\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport ListInput from \"../ListInput/ListInput\";\nimport Button from \"../Button/Button\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/recipeForm\";\n\nconst AddRecipe = (props) => {\n    // Reset edit form when first going to add recipe page\n  useEffect(() => {\n    props.onResetRecipeForm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const ingredientsDisplay = props.ingredients.map((ingredient, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={ingredient}\n        removeListInput={props.removeListInput}\n        listName=\"ingredients\"\n      />\n    );\n  });\n\n  const methodDisplay = props.method.map((step, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={step}\n        removeListInput={props.removeListInput}\n        listName=\"method\"\n      />\n    );\n  });\n\n  return (\n    <div className={classes.AddRecipe}>\n      <PageTitle>Add Recipe</PageTitle>\n      <form\n        onSubmit={props.saveRecipe}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        }}\n      >\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={props.formChange}\n          value={props.details.name}\n          placeholder=\"Enter Name\"\n          required={true}\n        />\n        <label>Category</label>\n        <input\n          type=\"text\"\n          name=\"category\"\n          onChange={props.formChange}\n          value={props.details.category}\n          placeholder=\"Enter Category\"\n          required={true}\n        />\n        <label>Time</label>\n        <div className={classes.TimeContainer}>\n          <input\n            type=\"number\"\n            name=\"time\"\n            onChange={props.formChange}\n            value={props.details.time}\n            placeholder=\"Enter Time\"\n          />\n          <p>Minutes</p>\n        </div>\n        <label>Ingredients</label>\n        <ul>{ingredientsDisplay}</ul>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"ingredients\")}\n        >\n          Add\n        </Button>\n        <label>Method</label>\n        <ol>{methodDisplay}</ol>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"method\")}\n        >\n          Add\n        </Button>\n        <Button type=\"submit\" btnStyle=\"Save\">\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.recipeForm.details,\n    ingredients: state.recipeForm.ingredients,\n    method: state.recipeForm.method,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddListInput: (key) => {\n      dispatch(actions.addListInput(key));\n    },\n    onResetRecipeForm: () => {\n      dispatch(actions.resetRecipeForm());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecipe);\n","import React from \"react\";\nimport classes from \"./Recipe.module.css\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport { connect } from \"react-redux\";\n\nconst Recipe = (props) => {\n  const location = useLocation();\n  const pathArray = location.pathname.split(\"/\");\n  const index = pathArray[pathArray.length - 1];\n\n  // Render nothing when going directly as recipes hasn't loaded yet\n  if (props.recipes.length === 0) {\n    return null;\n  } else {\n    return (\n      <section className={classes.Recipe}>\n        <PageTitle>{props.recipes[index].name}</PageTitle>\n        <div className={classes.DetailsContainer}>\n          <p>{props.recipes[index].category}</p>\n          <p>\n            {props.recipes[index].time}{\" \"}\n            {props.recipes[index].time !== \"\" ? \"Min\" : null}\n          </p>\n        </div>\n        <h2>Ingredients</h2>\n        <ul>\n          {props.recipes[index].ingredients.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n        </ul>\n        <h2>Method</h2>\n        <ol>\n          {props.recipes[index].method.map((step, index) => (\n            <li key={index}>{step}</li>\n          ))}\n        </ol>\n        <Link to={`/edit/${index}`}>Edit</Link>\n      </section>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes.recipes,\n  };\n};\n\nexport default connect(mapStateToProps)(Recipe);\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n  return <div className={classes.loader}></div>;\n};\n\nexport default Spinner;\n","import React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport classes from \"./EditRecipe.module.css\";\n\nimport ListInput from \"../ListInput/ListInput\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport Button from \"../Button/Button\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/recipeForm\";\n\nconst EditRecipe = (props) => {\n  const location = useLocation();\n  const pathArray = location.pathname.split(\"/\");\n  const index = pathArray[pathArray.length - 1];\n\n  useEffect(() => {\n    // Add values to states for form editing from recipes at index of editing\n    props.onSetDetails(\"name\", props.recipes[index].name);\n    props.onSetDetails(\"category\", props.recipes[index].category);\n    props.onSetDetails(\"time\", props.recipes[index].time);\n    props.onReplaceList(\"ingredients\", props.recipes[index].ingredients);\n    props.onReplaceList(\"method\", props.recipes[index].method);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const ingredientsDisplay = props.ingredients.map((ingredient, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={ingredient}\n        removeListInput={props.removeListInput}\n        listName=\"ingredients\"\n      />\n    );\n  });\n\n  const methodDisplay = props.method.map((step, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={step}\n        removeListInput={props.removeListInput}\n        listName=\"method\"\n      />\n    );\n  });\n\n  return (\n    <div className={classes.EditRecipe}>\n      <PageTitle>Edit Recipe</PageTitle>\n      <form\n        onSubmit={(e) => props.saveEditedRecipe(e, index)}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        }}\n      >\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={props.details.name}\n          onChange={props.formChange}\n          placeholder=\"Enter Name\"\n          required={true}\n        />\n        <label>Category</label>\n        <input\n          type=\"text\"\n          name=\"category\"\n          value={props.details.category}\n          onChange={props.formChange}\n          placeholder=\"Enter Category\"\n          required={true}\n        />\n        <label>Time</label>\n        <div className={classes.TimeContainer}>\n          <input\n            type=\"number\"\n            name=\"time\"\n            onChange={props.formChange}\n            value={props.details.time}\n            placeholder=\"Enter Time\"\n          />\n          <p>Minutes</p>\n        </div>\n        <label>Ingredients</label>\n        <ul>{ingredientsDisplay}</ul>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"ingredients\")}\n        >\n          Add\n        </Button>\n        <label>Method</label>\n        <ol>{methodDisplay}</ol>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"method\")}\n        >\n          Add\n        </Button>\n        <Button type=\"submit\" btnStyle=\"Save\">\n          Save\n        </Button>\n        <Button\n          type=\"button\"\n          btnStyle=\"DeleteRecipe\"\n          clickHandler={(e) => props.deleteRecipe(e, index)}\n        >\n          Delete\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.recipeForm.details,\n    ingredients: state.recipeForm.ingredients,\n    method: state.recipeForm.method,\n    recipes: state.recipes.recipes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddListInput: (key) => {\n      dispatch(actions.addListInput(key));\n    },\n    onSetDetails: (key, value) => {\n      dispatch(actions.setDetails(key, value));\n    },\n    onReplaceList: (key, array) => {\n      dispatch(actions.replaceList(key, array));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRecipe);\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import classes from \"./App.module.css\";\nimport Nav from \"./components/Nav/Nav\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Recipes from \"./components/Recipes/Recipes\";\nimport AddRecipe from \"./components/AddRecipe/AddRecipe\";\nimport React, { useState, useEffect } from \"react\";\nimport Recipe from \"./components/Recipe/Recipe\";\nimport Spinner from \"./components/Spinner/Spinner\";\nimport EditRecipe from \"./components/EditRecipe/EditRecipe\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\nconst App = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [dataFetched, setDataFetched] = useState(false);\n\n  // Run on first load\n  useEffect(() => {\n    // Retrieve from firebase on first load\n    if (!dataFetched) {\n      fetch(\"https://recipes-f31ef-default-rtdb.firebaseio.com/recipes.json\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          console.log(\"fetched\", response);\n          const newRecipes = [];\n          if (response === null) {\n            return;\n          }\n          // Create recipes array\n          for (let key in response) {\n            newRecipes.push({ ...response[key] });\n          }\n          // setRecipes(newRecipes);\n          props.onReplaceRecipes(newRecipes);\n\n          setLoading(false);\n          setDataFetched(true);\n          // updateCategories(newRecipes);\n          props.onUpdateCategories(newRecipes);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Handle change in forms simple input values\n  const formChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    props.onSetDetails(name, value);\n  };\n\n  const history = useHistory();\n\n  // Save to state when submitted\n  const saveRecipe = (e) => {\n    e.preventDefault();\n\n    // Set unique id for referencing in other uses\n    const id = Date.now();\n    const addedRecipe = {\n      name: props.details.name,\n      category: props.details.category,\n      time: props.details.time,\n      ingredients: props.ingredients,\n      method: props.method,\n      id,\n    };\n\n    // Add to firebase database\n    fetch(\n      `https://recipes-f31ef-default-rtdb.firebaseio.com/recipes/${id}.json`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(addedRecipe),\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Successfully Added\", data);\n\n        // Add new recipe and update categories\n        props.onAddRecipe(addedRecipe);\n        props.onUpdateCategories();\n\n        // Redirect to home page\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  // Save edited recipe on submit\n  const saveEditedRecipe = (e, index) => {\n    e.preventDefault();\n    const editedRecipe = {\n      name: props.details.name,\n      category: props.details.category,\n      time: props.details.time,\n      ingredients: props.ingredients,\n      method: props.method,\n      id: props.recipes[index].id,\n    };\n\n    // Add to firebase database\n    fetch(\n      `https://recipes-f31ef-default-rtdb.firebaseio.com/recipes/${props.recipes[index].id}.json`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(editedRecipe),\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Successfully Updated\", data);\n\n        // Save edited recipes and update categories\n        props.onEditRecipe(editedRecipe, index);\n        props.onUpdateCategories();\n\n        // Redirect to home page\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  // Remove recipe from state and database\n  const deleteRecipe = (e, index) => {\n    // Delete from firebase database\n    setLoading(true);\n    fetch(\n      `https://recipes-f31ef-default-rtdb.firebaseio.com/recipes/${props.recipes[index].id}.json`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Successfully Deleted\", data);\n\n        // Delete recipe and update categories\n        props.onDeleteRecipe(index);\n        props.onUpdateCategories();\n\n        // Redirect to home page\n        history.push(\"/\");\n\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  return (\n    <div className={classes.App}>\n      <ScrollToTop />\n      <header>\n        <Nav />\n      </header>\n      <Switch>\n        <Route exact path=\"/\">\n          {loading ? <Spinner /> : <Recipes />}\n        </Route>\n        <Route path=\"/addrecipe\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <AddRecipe formChange={formChange} saveRecipe={saveRecipe} />\n          )}\n        </Route>\n        <Route path=\"/edit/:id\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <EditRecipe\n              formChange={formChange}\n              saveEditedRecipe={saveEditedRecipe}\n              deleteRecipe={deleteRecipe}\n            />\n          )}\n        </Route>\n        <Route path=\"/:id\">{loading ? <Spinner /> : <Recipe />}</Route>\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.recipeForm.details,\n    ingredients: state.recipeForm.ingredients,\n    method: state.recipeForm.method,\n    categories: state.recipes.categories,\n    recipes: state.recipes.recipes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetDetails: (key, value) => {\n      dispatch(actions.setDetails(key, value));\n    },\n    onReplaceList: (key, array) => {\n      dispatch(actions.replaceList(key, array));\n    },\n    onUpdateCategories: () => {\n      dispatch(actions.updateCategories());\n    },\n    onReplaceRecipes: (newRecipes) => {\n      dispatch(actions.replaceRecipes(newRecipes));\n    },\n    onAddRecipe: (newRecipe) => {\n      dispatch(actions.addRecipe(newRecipe));\n    },\n    onEditRecipe: (editedRecipe, index) => {\n      dispatch(actions.editRecipe(editedRecipe, index));\n    },\n    onDeleteRecipe: (index) => {\n      dispatch(actions.deleteRecipe(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  details: {\n    name: \"\",\n    category: \"\",\n    time: \"\",\n  },\n  ingredients: [\"\"],\n  method: [\"\"],\n};\n\nconst setDetails = (state, action) => {\n  return {\n    ...state,\n    details: {\n      ...state.details,\n      [action.key]: action.value,\n    },\n  };\n};\n\nconst resetRecipeForm = (state, action) => {\n  return { ...initialState };\n};\n\nconst addListInput = (state, action) => {\n  return {\n    ...state,\n    [action.key]: [...state[action.key], \"\"],\n  };\n};\n\nconst removeListInput = (state, action) => {\n  const arrayCopy = [...state[action.key]];\n  arrayCopy.splice(action.index, 1);\n  return {\n    ...state,\n    [action.key]: arrayCopy,\n  };\n};\n\nconst setListInput = (state, action) => {\n  const arrayCopy2 = [...state[action.key]];\n  arrayCopy2[action.index] = action.value;\n  return {\n    ...state,\n    [action.key]: arrayCopy2,\n  };\n};\n\nconst replaceList = (state, action) => {\n  return {\n    ...state,\n    [action.key]: [...action.array],\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_DETAILS:\n      return setDetails(state, action);\n    case actionTypes.RESET_RECIPE_FORM:\n      return resetRecipeForm(state, action);\n    case actionTypes.ADD_LIST_INPUT:\n      return addListInput(state, action);\n    case actionTypes.REMOVE_LIST_INPUT:\n      return removeListInput(state, action);\n    case actionTypes.SET_LIST_INPUT:\n      return setListInput(state, action);\n    case actionTypes.REPLACE_LIST:\n      return replaceList(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  recipes: [],\n  categories: [],\n};\n\n// Create new categories from stored recipes\nconst updateCategories = (state, action) => {\n  const newCategories = {};\n  for (let i = 0; i < state.recipes.length; i++) {\n    newCategories[state.recipes[i].category.toLowerCase()] = true;\n  }\n  return {\n    ...state,\n    categories: newCategories,\n  };\n};\n\n// Toggle checked category for filtering\nconst toggleCategory = (state, action) => {\n  return {\n    ...state,\n    categories: {\n      ...state.categories,\n      [action.name]: !state.categories[action.name]\n    }\n  };\n};\n\n// Function to duplicate recipes deeply\nconst duplicateRecipes = (state) => {\n  const newRecipes = [];\n  for (let i = 0; i < state.recipes.length; i++) {\n    const recipeObj = {\n      name: state.recipes[i].name,\n      category: state.recipes[i].category,\n      time: state.recipes[i].time,\n      ingredients: [...state.recipes[i].ingredients],\n      method: [...state.recipes[i].method],\n    };\n    newRecipes.push(recipeObj);\n  }\n  return newRecipes;\n};\n\n// Replace all recipes with new ones\nconst replaceRecipes = (state, action) => {\n  return {\n    ...state,\n    recipes: action.newRecipes,\n  };\n};\n\n// Add new recipe to state\nconst addRecipe = (state, action) => {\n  return {\n    ...state,\n    recipes: duplicateRecipes(state).concat(action.newRecipe),\n  };\n};\n\n// Edit one specified recipe\nconst editRecipe = (state, action) => {\n  const newRecipes = duplicateRecipes(state);\n  newRecipes.splice(action.index, 1, action.editedRecipe);\n  return {\n    ...state,\n    recipes: newRecipes,\n  };\n};\n\n// Delete specified recipe\nconst deleteRecipe = (state, action) => {\n  const newRecipes = duplicateRecipes(state);\n  newRecipes.splice(action.index, 1);\n  return {\n    ...state,\n    recipes: newRecipes,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_CATEGORIES:\n      return updateCategories(state, action);\n    case actionTypes.TOGGLE_CATEGORY:\n      return toggleCategory(state, action);\n    case actionTypes.REPLACE_RECIPES:\n      return replaceRecipes(state, action);\n    case actionTypes.ADD_RECIPE:\n      return addRecipe(state, action);\n    case actionTypes.EDIT_RECIPE:\n      return editRecipe(state, action);\n    case actionTypes.DELETE_RECIPE:\n      return deleteRecipe(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport recipeForm from \"./store/reducers/recipeForm\";\nimport recipes from \"./store/reducers/recipes\"\nimport thunk from \"redux-thunk\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  recipeForm: recipeForm,\n  recipes: recipes,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}