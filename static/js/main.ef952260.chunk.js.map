{"version":3,"sources":["components/Recipes/Recipes.module.css","components/Filter/Filter.module.css","components/AddRecipe/AddRecipe.module.css","components/ListInput/ListInput.module.css","components/Button/Button.module.css","components/Recipe/Recipe.module.css","components/EditRecipe/EditRecipe.module.css","App.module.css","components/Nav/Nav.module.css","components/PageTitle/PageTitle.module.css","components/MenuButton/MenuButton.module.css","components/Spinner/Spinner.module.css","components/Nav/Nav.js","components/PageTitle/PageTitle.js","components/MenuButton/MenuButton.js","components/Filter/Filter.js","store/actions/actionTypes.js","store/actions/recipeForm.js","store/actions/recipes.js","components/Recipes/Recipes.js","components/Button/Button.js","components/ListInput/ListInput.js","components/AddRecipe/AddRecipe.js","components/Recipe/Recipe.js","components/Spinner/Spinner.js","components/EditRecipe/EditRecipe.js","components/ScrollToTop/ScrollToTop.js","App.js","store/reducers/recipeForm.js","store/reducers/recipes.js","index.js"],"names":["module","exports","Nav","className","classes","to","xmlns","width","height","fill","viewBox","d","PageTitle","props","children","MenuButton","onClick","toggleFilter","type","fillRule","Filter","filterClasses","FilterContainer","filterOpen","push","Open","checkboxDisplay","key","categories","name","checked","onChange","changeChecked","sort","a","b","nameA","toLowerCase","nameB","join","CloseButton","formWrapper","SET_DETAILS","RESET_RECIPE_FORM","ADD_LIST_INPUT","SET_LIST_INPUT","REMOVE_LIST_INPUT","REPLACE_LIST","UPDATE_CATEGORIES","TOGGLE_CATEGORY","REPLACE_RECIPES","ADD_RECIPE","EDIT_RECIPE","DELETE_RECIPE","LOADING_ON","LOADING_OFF","DATA_FETCHED","setDetails","value","actionTypes","addListInput","updateCategories","loadingOff","loadingOn","fetchRecipes","dispatch","fetch","then","response","json","console","log","newRecipes","replaceRecipes","catch","error","storeRecipe","addedRecipe","history","id","method","headers","body","JSON","stringify","data","newRecipe","editStoredRecipe","editedRecipe","index","editRecipe","deleteStoredRecipe","recipes","deleteRecipe","connect","state","onToggleCategory","actions","recipesDisplay","filter","recipe","category","map","RecipeItem","DetailsContainer","time","useState","setFilterOpen","FilterModal","RecipesWrapper","RecipesContainer","FilterWrapper","e","target","Button","btnStyle","clickHandler","data-index","data-key","listName","onRemoveListInput","onSetListInput","listStyle","ListInput","MethodList","textArea","useRef","ref","rows","autoComplete","required","details","recipeForm","ingredients","onAddListInput","onResetRecipeForm","useEffect","ingredientsDisplay","ingredient","setListInput","removeListInput","methodDisplay","step","AddRecipe","onSubmit","saveRecipe","onKeyDown","preventDefault","formChange","placeholder","TimeContainer","pathArray","useLocation","pathname","split","length","Recipe","Spinner","loader","onSetDetails","onReplaceList","array","EditRecipe","saveEditedRecipe","ScrollToTop","window","scrollTo","dataFetched","loading","onFetchRecipes","onStoreRecipe","onEditStoredRecipe","onDeleteStoredRecipe","useHistory","App","exact","path","Date","now","initialState","action","resetRecipeForm","arrayCopy","splice","arrayCopy2","replaceList","reducer","newCategories","i","toggleCategory","duplicateRecipes","recipeObj","addRecipe","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef952260.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipesWrapper\":\"Recipes_RecipesWrapper__2ANop\",\"RecipesContainer\":\"Recipes_RecipesContainer__3Y0gB\",\"RecipeItem\":\"Recipes_RecipeItem__shgWc\",\"DetailsContainer\":\"Recipes_DetailsContainer__3Mrj0\",\"FilterModal\":\"Recipes_FilterModal__34VfE\",\"FilterWrapper\":\"Recipes_FilterWrapper__2BfZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterContainer\":\"Filter_FilterContainer__RCB7a\",\"Open\":\"Filter_Open__2g_uW\",\"formWrapper\":\"Filter_formWrapper__1pdeA\",\"CloseButton\":\"Filter_CloseButton__az4bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddRecipe\":\"AddRecipe_AddRecipe__3SxrA\",\"TimeContainer\":\"AddRecipe_TimeContainer__2Cu6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListInput\":\"ListInput_ListInput__2S50O\",\"MethodList\":\"ListInput_MethodList__2lQDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"Save\":\"Button_Save__2is0_\",\"Delete\":\"Button_Delete__3VrNe\",\"Add\":\"Button_Add__GcQCw\",\"DeleteRecipe\":\"Button_DeleteRecipe__e1tDF\",\"Chevron\":\"Button_Chevron__3BRZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Recipe\":\"Recipe_Recipe__2iQUq\",\"DetailsContainer\":\"Recipe_DetailsContainer__25Cay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditRecipe\":\"EditRecipe_EditRecipe__ZdFW6\",\"TimeContainer\":\"EditRecipe_TimeContainer__1acAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__cViw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageTitle\":\"PageTitle_PageTitle__2pL08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuButton\":\"MenuButton_MenuButton__nT2fw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3ENkM\",\"load3\":\"Spinner_load3__jjSEM\"};","import React from \"react\";\nimport classes from \"./Nav.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className={classes.Nav}>\n      <ul>\n        <li>\n          <Link to=\"/\">Recipes</Link>\n        </li>\n        <li>\n          <Link to=\"/addrecipe\">Add Recipe</Link>\n        </li>\n        <li></li>\n        <li>\n          <button>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport classes from \"./PageTitle.module.css\";\n\nconst PageTitle = (props) => {\n  return <h1 className={classes.PageTitle}>{props.children}</h1>;\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport classes from \"./MenuButton.module.css\";\n\nconst MenuButton = (props) => {\n  return (\n    <button\n      className={classes.MenuButton}\n      onClick={props.toggleFilter}\n      type=\"button\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default MenuButton;\n","import React from \"react\";\nimport classes from \"./Filter.module.css\";\n\nconst Filter = (props) => {\n  // If filter sidebar is opened push class to change position\n  const filterClasses = [classes.FilterContainer];\n  if (props.filterOpen) {\n    filterClasses.push(classes.Open);\n  }\n\n  // Display labels with checkboxes for filtering\n  const checkboxDisplay = [];\n  for (let key in props.categories) {\n    checkboxDisplay.push(\n      <label key={key} name={key}>\n        <input\n          type=\"checkbox\"\n          checked={props.categories[key]}\n          name={key}\n          onChange={props.changeChecked}\n        />\n        {key}\n      </label>\n    );\n  }\n\n  // Sort alphabetically\n  checkboxDisplay.sort((a, b) => {\n    const nameA = a.props.name.toLowerCase();\n    const nameB = b.props.name.toLowerCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n  return (\n    <div className={filterClasses.join(\" \")}>\n      <button className={classes.CloseButton} onClick={props.toggleFilter}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n        </svg>\n      </button>\n      <h3>Filter</h3>\n      <div className={classes.formWrapper}>\n        <form>\n          <div>{checkboxDisplay}</div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","export const SET_DETAILS = \"SET_DETAILS\";\nexport const RESET_RECIPE_FORM = \"RESET_RECIPE_FORM\";\nexport const ADD_LIST_INPUT = \"ADD_LIST_INPUT\";\nexport const SET_LIST_INPUT = \"SET_LIST_INPUT\";\nexport const REMOVE_LIST_INPUT = \"REMOVE_LIST_INPUT\";\nexport const REPLACE_LIST = \"REPLACE_LIST\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const TOGGLE_CATEGORY = \"TOGGLE_CATEGORY\";\n\nexport const REPLACE_RECIPES = \"REPLACE_RECIPES\";\nexport const ADD_RECIPE = \"ADD_RECIPE\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\n\nexport const FETCH_RECIPES = \"FETCH_RECIPES\";\nexport const STORE_RECIPE = \"STORE_RECIPE\";\nexport const EDIT_STORED_RECIPE = \"EDIT_STORED_RECIPE\";\nexport const DELETE_STORED_RECIPE = \"DELETE_STORED_RECIPE\";\n\nexport const LOADING_ON = \"LOADING_ON\";\nexport const LOADING_OFF = \"LOADING_OFF\";\nexport const DATA_FETCHED = \"DATA_FETCHED\";\n","import * as actionTypes from \"./actionTypes\";\n\n// Handle input changes in form\nexport const setDetails = (key, value) => {\n  return {\n    type: actionTypes.SET_DETAILS,\n    key: key,\n    value: value,\n  };\n};\n\n// Clear all previously entered inputs\nexport const resetRecipeForm = () => {\n  return {\n    type: actionTypes.RESET_RECIPE_FORM,\n  };\n};\n\n// Add a new input field to the specified list (method or ingredients)\nexport const addListInput = (key) => {\n  return {\n    type: actionTypes.ADD_LIST_INPUT,\n    key: key,\n  };\n};\n\n// Set value of the currently focused list input field\nexport const setListInput = (key, index, value) => {\n  return {\n    type: actionTypes.SET_LIST_INPUT,\n    key: key,\n    index: index,\n    value: value,\n  };\n};\n\n// Remove a specified list input field from list\nexport const removeListInput = (key, index) => {\n  return {\n    type: actionTypes.REMOVE_LIST_INPUT,\n    key: key,\n    index: index,\n  };\n};\n\n// Replace list so that it can be edited\nexport const replaceList = (key, array) => {\n  return {\n    type: actionTypes.REPLACE_LIST,\n    key: key,\n    array: array,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\nexport const updateCategories = () => {\n  return {\n    type: actionTypes.UPDATE_CATEGORIES,\n  };\n};\n\nexport const toggleCategory = (name) => {\n  return {\n    type: actionTypes.TOGGLE_CATEGORY,\n    name,\n  };\n};\n\nexport const replaceRecipes = (newRecipes) => {\n  return {\n    type: actionTypes.REPLACE_RECIPES,\n    newRecipes,\n  };\n};\n\nexport const addRecipe = (newRecipe) => {\n  return {\n    type: actionTypes.ADD_RECIPE,\n    newRecipe: newRecipe,\n  };\n};\n\nexport const editRecipe = (editedRecipe, index) => {\n  return {\n    type: actionTypes.EDIT_RECIPE,\n    editedRecipe,\n    index,\n  };\n};\n\nexport const deleteRecipe = (index) => {\n  return {\n    type: actionTypes.DELETE_RECIPE,\n    index,\n  };\n};\n\n// Set loading to false\nexport const loadingOff = () => {\n  return {\n    type: actionTypes.LOADING_OFF,\n  };\n};\n\n// Set loading to true\nexport const loadingOn = () => {\n  return {\n    type: actionTypes.LOADING_ON,\n  };\n};\n\n// Upon data fetched set as true\nexport const dataFetched = () => {\n  return {\n    type: actionTypes.DATA_FETCHED,\n  };\n};\n\n// Fetch recipes from firebase and update state with them\nexport const fetchRecipes = () => {\n  return (dispatch) => {\n    fetch(\"https://recipes-f31ef-default-rtdb.firebaseio.com/recipes.json\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        console.log(\"fetched\", response);\n        const newRecipes = [];\n        // Create recipes array\n        for (let key in response) {\n          newRecipes.push({ ...response[key] });\n        }\n        dispatch(replaceRecipes(newRecipes));\n        dispatch(dataFetched());\n        dispatch(updateCategories(newRecipes));\n        dispatch(loadingOff());\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n};\n\n// Store newly added recipe to firebase and state\nexport const storeRecipe = (addedRecipe, history) => {\n  return (dispatch) => {\n    dispatch(loadingOn())\n    // Add to firebase database\n    fetch(\n      `https://recipes-f31ef-default-rtdb.firebaseio.com/recipes/${addedRecipe.id}.json`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(addedRecipe),\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Successfully Added\", data);\n\n        // Add new recipe and update categories\n        dispatch(addRecipe(addedRecipe));\n        dispatch(updateCategories());\n        dispatch(loadingOff());\n\n        // Redirect to home page\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n};\n\n// Get data from edit form and store in firebase and state\nexport const editStoredRecipe = (editedRecipe, index, history) => {\n  return (dispatch) => {\n    dispatch(loadingOn())\n    fetch(\n      `https://recipes-f31ef-default-rtdb.firebaseio.com/recipes/${editedRecipe.id}.json`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(editedRecipe),\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Successfully Updated\", data);\n\n        // Save edited recipes and update categories\n        dispatch(editRecipe(editedRecipe, index));\n        dispatch(updateCategories());\n        dispatch(loadingOff());\n\n        // Redirect to home page\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n};\n\n// Delete a recipe from firebase\nexport const deleteStoredRecipe = (recipes, index, history) => {\n  return (dispatch) => {\n    dispatch(loadingOn())\n    fetch(\n      `https://recipes-f31ef-default-rtdb.firebaseio.com/recipes/${recipes[index].id}.json`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Successfully Deleted\", data);\n\n        // Delete recipe and update categories\n        dispatch(deleteRecipe(index));\n        dispatch(updateCategories());\n        dispatch(loadingOff());\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n};\n","import React, { useState } from \"react\";\nimport classes from \"./Recipes.module.css\";\nimport { Link } from \"react-router-dom\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport MenuButton from \"../MenuButton/MenuButton\";\nimport Filter from \"../Filter/Filter\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\"\n\nconst Recipes = (props) => {\n  // List of recipes to display with category filter applied\n  const recipesDisplay = props.recipes\n    // Filter if category set to true in categories state\n    .filter((recipe) => props.categories[recipe.category.toLowerCase()])\n    .map((recipe, index) => {\n      return (\n        <Link\n          to={`/recipes/${index}`}\n          className={classes.RecipeItem}\n          key={index}\n          name={recipe.name}\n        >\n          <h2>{recipe.name}</h2>\n          <div className={classes.DetailsContainer}>\n            <p>{recipe.category}</p>\n            <p>\n              {recipe.time} {recipe.time !== \"\" ? \"Min\" : null}\n            </p>\n          </div>\n        </Link>\n      );\n    });\n\n  // Sort Alphabetically\n  recipesDisplay.sort((a, b) => {\n    const nameA = a.props.name.toLowerCase();\n    const nameB = b.props.name.toLowerCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n\n  // Control filter sidebar open and closing\n  const [filterOpen, setFilterOpen] = useState(false);\n  const toggleFilter = () => {\n    setFilterOpen(!filterOpen);\n  };\n\n  // Add dark background next to filter slide out menu if open\n  const filter = [];\n  if (filterOpen) {\n    filter.push(\n      <div\n        className={classes.FilterModal}\n        key=\"Filter\"\n        onClick={toggleFilter}\n      ></div>\n    );\n  }\n\n  // Change checkboxes in filter\n  const changeChecked = (e) => {\n    // const newCategories = { ...props.categories };\n    // newCategories[e.target.name] = !newCategories[e.target.name];\n    props.onToggleCategory(e.target.name);\n  };\n\n  return (\n    <div className={classes.RecipesWrapper}>\n      <section className={classes.RecipesContainer}>\n        <PageTitle>Recipes</PageTitle>\n        <div>{recipesDisplay}</div>\n      </section>\n      <MenuButton toggleFilter={toggleFilter} />\n      {filter}\n      <div className={classes.FilterWrapper}>\n        <Filter\n          filterOpen={filterOpen}\n          toggleFilter={toggleFilter}\n          categories={props.categories}\n          changeChecked={changeChecked}\n        ></Filter>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes.recipes,\n    categories: state.recipes.categories,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleCategory: (name) => {\n      dispatch(actions.toggleCategory(name))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);\n","import classes from \"./Button.module.css\";\nimport React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={[classes.Button, classes[props.btnStyle]].join(\" \")}\n      type={props.type}\n      onClick={props.clickHandler}\n      data-index={props.index}\n      data-key={props.listName}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef } from \"react\";\n\nimport classes from \"./ListInput.module.css\";\nimport Button from \"../Button/Button\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/recipeForm\";\n\nconst ListInput = (props) => {\n  const listStyle = [classes.ListInput];\n\n  if (props.listName === \"method\") {\n    listStyle.push(classes.MethodList);\n  }\n\n  // Resize text area when amount of text changes\n  const textArea = useRef(null);\n\n  return (\n    <li className={listStyle.join(\" \")}>\n      <div>\n        <TextareaAutosize\n          ref={textArea}\n          rows={1}\n          type=\"text\"\n          name={props.name}\n          onChange={(e) =>\n            props.onSetListInput(props.listName, props.index, e.target.value)\n          }\n          data-index={props.index}\n          value={props.name}\n          autoComplete=\"off\"\n          required={true}\n        ></TextareaAutosize>\n        <Button\n          type=\"button\"\n          btnStyle=\"Delete\"\n          index={props.index}\n          key={props.listName}\n          listName={props.listName}\n          clickHandler={() =>\n            props.onRemoveListInput(props.listName, props.index)\n          }\n        >\n          Delete\n        </Button>\n      </div>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveListInput: (key, index) => {\n      dispatch(actions.removeListInput(key, index));\n    },\n    onSetListInput: (key, index, value) => {\n      dispatch(actions.setListInput(key, index, value));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ListInput);\n","import React, { useEffect } from \"react\";\nimport classes from \"./AddRecipe.module.css\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport ListInput from \"../ListInput/ListInput\";\nimport Button from \"../Button/Button\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/recipeForm\";\n\nconst AddRecipe = (props) => {\n    // Reset edit form when first going to add recipe page\n  useEffect(() => {\n    props.onResetRecipeForm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const ingredientsDisplay = props.ingredients.map((ingredient, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={ingredient}\n        removeListInput={props.removeListInput}\n        listName=\"ingredients\"\n      />\n    );\n  });\n\n  const methodDisplay = props.method.map((step, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={step}\n        removeListInput={props.removeListInput}\n        listName=\"method\"\n      />\n    );\n  });\n\n  return (\n    <div className={classes.AddRecipe}>\n      <PageTitle>Add Recipe</PageTitle>\n      <form\n        onSubmit={props.saveRecipe}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        }}\n      >\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={props.formChange}\n          value={props.details.name}\n          placeholder=\"Enter Name\"\n          required={true}\n        />\n        <label>Category</label>\n        <input\n          type=\"text\"\n          name=\"category\"\n          onChange={props.formChange}\n          value={props.details.category}\n          placeholder=\"Enter Category\"\n          required={true}\n        />\n        <label>Time</label>\n        <div className={classes.TimeContainer}>\n          <input\n            type=\"number\"\n            name=\"time\"\n            onChange={props.formChange}\n            value={props.details.time}\n            placeholder=\"Enter Time\"\n          />\n          <p>Minutes</p>\n        </div>\n        <label>Ingredients</label>\n        <ul>{ingredientsDisplay}</ul>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"ingredients\")}\n        >\n          Add\n        </Button>\n        <label>Method</label>\n        <ol>{methodDisplay}</ol>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"method\")}\n        >\n          Add\n        </Button>\n        <Button type=\"submit\" btnStyle=\"Save\">\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.recipeForm.details,\n    ingredients: state.recipeForm.ingredients,\n    method: state.recipeForm.method,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddListInput: (key) => {\n      dispatch(actions.addListInput(key));\n    },\n    onResetRecipeForm: () => {\n      dispatch(actions.resetRecipeForm());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecipe);\n","import React from \"react\";\nimport classes from \"./Recipe.module.css\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport { connect } from \"react-redux\";\n\nconst Recipe = (props) => {\n  const location = useLocation();\n  const pathArray = location.pathname.split(\"/\");\n  const index = pathArray[pathArray.length - 1];\n\n  // Render nothing when going directly as recipes hasn't loaded yet\n  if (props.recipes.length === 0) {\n    return null;\n  } else {\n    return (\n      <section className={classes.Recipe}>\n        <PageTitle>{props.recipes[index].name}</PageTitle>\n        <div className={classes.DetailsContainer}>\n          <p>{props.recipes[index].category}</p>\n          <p>\n            {props.recipes[index].time}{\" \"}\n            {props.recipes[index].time !== \"\" ? \"Min\" : null}\n          </p>\n        </div>\n        <h2>Ingredients</h2>\n        <ul>\n          {props.recipes[index].ingredients.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n        </ul>\n        <h2>Method</h2>\n        <ol>\n          {props.recipes[index].method.map((step, index) => (\n            <li key={index}>{step}</li>\n          ))}\n        </ol>\n        <Link to={`/edit/${index}`}>Edit</Link>\n      </section>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes.recipes,\n  };\n};\n\nexport default connect(mapStateToProps)(Recipe);\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n  return <div className={classes.loader}></div>;\n};\n\nexport default Spinner;\n","import React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport classes from \"./EditRecipe.module.css\";\n\nimport ListInput from \"../ListInput/ListInput\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport Button from \"../Button/Button\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/recipeForm\";\n\nconst EditRecipe = (props) => {\n  const location = useLocation();\n  const pathArray = location.pathname.split(\"/\");\n  const index = pathArray[pathArray.length - 1];\n\n  useEffect(() => {\n    // Add values to states for form editing from recipes at index of editing\n    props.onSetDetails(\"name\", props.recipes[index].name);\n    props.onSetDetails(\"category\", props.recipes[index].category);\n    props.onSetDetails(\"time\", props.recipes[index].time);\n    props.onReplaceList(\"ingredients\", props.recipes[index].ingredients);\n    props.onReplaceList(\"method\", props.recipes[index].method);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const ingredientsDisplay = props.ingredients.map((ingredient, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={ingredient}\n        removeListInput={props.removeListInput}\n        listName=\"ingredients\"\n      />\n    );\n  });\n\n  const methodDisplay = props.method.map((step, index) => {\n    return (\n      <ListInput\n        key={index}\n        setListInput={props.setListInput}\n        index={index}\n        name={step}\n        removeListInput={props.removeListInput}\n        listName=\"method\"\n      />\n    );\n  });\n\n  return (\n    <div className={classes.EditRecipe}>\n      <PageTitle>Edit Recipe</PageTitle>\n      <form\n        onSubmit={(e) => props.saveEditedRecipe(e, index)}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        }}\n      >\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={props.details.name}\n          onChange={props.formChange}\n          placeholder=\"Enter Name\"\n          required={true}\n        />\n        <label>Category</label>\n        <input\n          type=\"text\"\n          name=\"category\"\n          value={props.details.category}\n          onChange={props.formChange}\n          placeholder=\"Enter Category\"\n          required={true}\n        />\n        <label>Time</label>\n        <div className={classes.TimeContainer}>\n          <input\n            type=\"number\"\n            name=\"time\"\n            onChange={props.formChange}\n            value={props.details.time}\n            placeholder=\"Enter Time\"\n          />\n          <p>Minutes</p>\n        </div>\n        <label>Ingredients</label>\n        <ul>{ingredientsDisplay}</ul>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"ingredients\")}\n        >\n          Add\n        </Button>\n        <label>Method</label>\n        <ol>{methodDisplay}</ol>\n        <Button\n          type=\"button\"\n          btnStyle=\"Add\"\n          clickHandler={() => props.onAddListInput(\"method\")}\n        >\n          Add\n        </Button>\n        <Button type=\"submit\" btnStyle=\"Save\">\n          Save\n        </Button>\n        <Button\n          type=\"button\"\n          btnStyle=\"DeleteRecipe\"\n          clickHandler={(e) => props.deleteRecipe(e, index)}\n        >\n          Delete\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.recipeForm.details,\n    ingredients: state.recipeForm.ingredients,\n    method: state.recipeForm.method,\n    recipes: state.recipes.recipes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddListInput: (key) => {\n      dispatch(actions.addListInput(key));\n    },\n    onSetDetails: (key, value) => {\n      dispatch(actions.setDetails(key, value));\n    },\n    onReplaceList: (key, array) => {\n      dispatch(actions.replaceList(key, array));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRecipe);\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import classes from \"./App.module.css\";\nimport Nav from \"./components/Nav/Nav\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Recipes from \"./components/Recipes/Recipes\";\nimport AddRecipe from \"./components/AddRecipe/AddRecipe\";\nimport React, { useEffect } from \"react\";\nimport Recipe from \"./components/Recipe/Recipe\";\nimport Spinner from \"./components/Spinner/Spinner\";\nimport EditRecipe from \"./components/EditRecipe/EditRecipe\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\nconst App = (props) => {\n  // Run on first load\n  useEffect(() => {\n    // Retrieve from firebase on first load\n    if (!props.dataFetched) {\n      props.onFetchRecipes();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Handle change in forms simple input values\n  const formChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    props.onSetDetails(name, value);\n  };\n\n  const history = useHistory();\n\n  // Save to state and firebase when submitted\n  const saveRecipe = (e) => {\n    e.preventDefault();\n\n    // Set unique id for referencing in other uses\n    const addedRecipe = {\n      name: props.details.name,\n      category: props.details.category,\n      time: props.details.time,\n      ingredients: props.ingredients,\n      method: props.method,\n      id: Date.now(),\n    };\n\n    // Add to firebase database\n    props.onStoreRecipe(addedRecipe, history);\n  };\n\n  // Save edited recipe on submit\n  const saveEditedRecipe = (e, index) => {\n    e.preventDefault();\n    const editedRecipe = {\n      name: props.details.name,\n      category: props.details.category,\n      time: props.details.time,\n      ingredients: props.ingredients,\n      method: props.method,\n      id: props.recipes[index].id,\n    };\n\n    // Add to firebase database and state\n    props.onEditStoredRecipe(editedRecipe, index, history);\n  };\n\n  // Remove recipe from state and database\n  const deleteRecipe = (e, index) => {\n    // Delete from firebase database\n    props.onDeleteStoredRecipe(props.recipes, index, history);\n\n    // Redirect to home page\n    history.push(\"/\");\n  };\n\n  return (\n    <div className={classes.App}>\n      <ScrollToTop />\n      <header>\n        <Nav />\n      </header>\n      <Switch>\n        <Route exact path=\"/\">\n          {props.loading ? <Spinner /> : <Recipes />}\n        </Route>\n        <Route path=\"/addrecipe\">\n          {props.loading ? (\n            <Spinner />\n          ) : (\n            <AddRecipe formChange={formChange} saveRecipe={saveRecipe} />\n          )}\n        </Route>\n        <Route path=\"/edit/:id\">\n          {props.loading ? (\n            <Spinner />\n          ) : (\n            <EditRecipe\n              formChange={formChange}\n              saveEditedRecipe={saveEditedRecipe}\n              deleteRecipe={deleteRecipe}\n            />\n          )}\n        </Route>\n        <Route path=\"/:id\">{props.loading ? <Spinner /> : <Recipe />}</Route>\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.recipeForm.details,\n    ingredients: state.recipeForm.ingredients,\n    method: state.recipeForm.method,\n    categories: state.recipes.categories,\n    recipes: state.recipes.recipes,\n    dataFetched: state.recipes.dataFetched,\n    loading: state.recipes.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetDetails: (key, value) => {\n      dispatch(actions.setDetails(key, value));\n    },\n    onFetchRecipes: () => {\n      dispatch(actions.fetchRecipes());\n    },\n    onStoreRecipe: (addedRecipe, history) => {\n      dispatch(actions.storeRecipe(addedRecipe, history));\n    },\n    onEditStoredRecipe: (editedRecipe, index, history) => {\n      dispatch(actions.editStoredRecipe(editedRecipe, index, history));\n    },\n    onDeleteStoredRecipe: (recipes, index, history) => {\n      dispatch(actions.deleteStoredRecipe(recipes, index, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  details: {\n    name: \"\",\n    category: \"\",\n    time: \"\",\n  },\n  ingredients: [\"\"],\n  method: [\"\"],\n};\n\nconst setDetails = (state, action) => {\n  return {\n    ...state,\n    details: {\n      ...state.details,\n      [action.key]: action.value,\n    },\n  };\n};\n\nconst resetRecipeForm = (state, action) => {\n  return { ...initialState };\n};\n\nconst addListInput = (state, action) => {\n  return {\n    ...state,\n    [action.key]: [...state[action.key], \"\"],\n  };\n};\n\nconst removeListInput = (state, action) => {\n  const arrayCopy = [...state[action.key]];\n  arrayCopy.splice(action.index, 1);\n  return {\n    ...state,\n    [action.key]: arrayCopy,\n  };\n};\n\nconst setListInput = (state, action) => {\n  const arrayCopy2 = [...state[action.key]];\n  arrayCopy2[action.index] = action.value;\n  return {\n    ...state,\n    [action.key]: arrayCopy2,\n  };\n};\n\nconst replaceList = (state, action) => {\n  return {\n    ...state,\n    [action.key]: [...action.array],\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_DETAILS:\n      return setDetails(state, action);\n    case actionTypes.RESET_RECIPE_FORM:\n      return resetRecipeForm(state, action);\n    case actionTypes.ADD_LIST_INPUT:\n      return addListInput(state, action);\n    case actionTypes.REMOVE_LIST_INPUT:\n      return removeListInput(state, action);\n    case actionTypes.SET_LIST_INPUT:\n      return setListInput(state, action);\n    case actionTypes.REPLACE_LIST:\n      return replaceList(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  recipes: [],\n  categories: [],\n  dataFetched: false,\n  loading: true,\n};\n\n// Create new categories from stored recipes\nconst updateCategories = (state, action) => {\n  const newCategories = {};\n  for (let i = 0; i < state.recipes.length; i++) {\n    newCategories[state.recipes[i].category.toLowerCase()] = true;\n  }\n  return {\n    ...state,\n    categories: newCategories,\n  };\n};\n\n// Toggle checked category for filtering\nconst toggleCategory = (state, action) => {\n  return {\n    ...state,\n    categories: {\n      ...state.categories,\n      [action.name]: !state.categories[action.name],\n    },\n  };\n};\n\n// Function to duplicate recipes deeply\nconst duplicateRecipes = (state) => {\n  const newRecipes = [];\n  for (let i = 0; i < state.recipes.length; i++) {\n    const recipeObj = {\n      name: state.recipes[i].name,\n      category: state.recipes[i].category,\n      time: state.recipes[i].time,\n      ingredients: [...state.recipes[i].ingredients],\n      method: [...state.recipes[i].method],\n    };\n    newRecipes.push(recipeObj);\n  }\n  return newRecipes;\n};\n\n// Replace all recipes with new ones\nconst replaceRecipes = (state, action) => {\n  return {\n    ...state,\n    recipes: action.newRecipes,\n  };\n};\n\n// Add new recipe to state\nconst addRecipe = (state, action) => {\n  return {\n    ...state,\n    recipes: duplicateRecipes(state).concat(action.newRecipe),\n  };\n};\n\n// Edit one specified recipe\nconst editRecipe = (state, action) => {\n  const newRecipes = duplicateRecipes(state);\n  newRecipes.splice(action.index, 1, action.editedRecipe);\n  return {\n    ...state,\n    recipes: newRecipes,\n  };\n};\n\n// Delete specified recipe\nconst deleteRecipe = (state, action) => {\n  const newRecipes = duplicateRecipes(state);\n  newRecipes.splice(action.index, 1);\n  return {\n    ...state,\n    recipes: newRecipes,\n  };\n};\n\nconst loadingOff = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n  };\n};\n\nconst loadingOn = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nconst dataFetched = (state, action) => {\n  return {\n    ...state,\n    dataFetched: true,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_CATEGORIES:\n      return updateCategories(state, action);\n    case actionTypes.TOGGLE_CATEGORY:\n      return toggleCategory(state, action);\n    case actionTypes.REPLACE_RECIPES:\n      return replaceRecipes(state, action);\n    case actionTypes.ADD_RECIPE:\n      return addRecipe(state, action);\n    case actionTypes.EDIT_RECIPE:\n      return editRecipe(state, action);\n    case actionTypes.DELETE_RECIPE:\n      return deleteRecipe(state, action);\n    case actionTypes.LOADING_OFF:\n      return loadingOff(state, action);\n    case actionTypes.LOADING_ON:\n      return loadingOn(state, action);\n    case actionTypes.DATA_FETCHED:\n      return dataFetched(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport recipeForm from \"./store/reducers/recipeForm\";\nimport recipes from \"./store/reducers/recipes\"\nimport thunk from \"redux-thunk\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  recipeForm: recipeForm,\n  recipes: recipes,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}